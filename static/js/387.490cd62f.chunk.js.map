{"version":3,"file":"static/js/387.490cd62f.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,sCAAyCC,IADrC,uBAClBE,EADkB,EAClBA,KADkB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDK,EAAnD,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAc,mCAAG,WAAMD,GAAN,yFACLR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,EAAKO,MAFgB,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qD,sKCvBjBQ,EAAcC,EAAAA,EAAAA,GAAH,2CAIXC,EAAcD,EAAAA,EAAAA,GAAH,iEAKXE,EAAeF,EAAAA,EAAAA,EAAH,8C,SCyBzB,EAhCgB,WACZ,IAAQL,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAEMV,EAAAA,EAAAA,IAAkBH,GAFxB,OAEPL,EAFO,OAGbgB,EAAWhB,GAHE,gDAKbmB,QAAQC,IAAR,MALa,yDAAH,qDAQlBF,GACH,GAAE,CAACb,IAGsB,IAAnBU,EAAQM,QACX,wBAAI,gBAEJ,SAACZ,EAAD,UACKM,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,UAACd,EAAD,YACI,SAACC,EAAD,UAAeY,KACf,SAACZ,EAAD,UAAea,MAFDF,EADT,KASxB,C","sources":["api/Api.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6c7bf07634a6f35c9bd58e8125654f91';\n\nexport const fetchMovies = async () => {\n  const {data} = await axios.get(`trending/movie/week?api_key=${API_KEY}`)\n  return data.results;\n}\n\nexport const fetchMovieQuery = async query => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n  return data.results;\n}\n\nexport const fetchMovieId = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n    \nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return data.cast;\n}\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\nmargin-top: 15px;\n`;\n\nexport const ReviewsItem = styled.li`\n    font-size: 14px;\n    padding: 6px;\n`;\n\nexport const ReviewsDescr = styled.p`\n    margin-top: 6px;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'api/Api';\nimport { ReviewsList,ReviewsItem,ReviewsDescr } from 'components/Reviews/Reviews.styled';\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            try {\n                const data = await fetchMovieReviews(movieId);\n                setReviews(data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchReviews()\n    }, [movieId]);\n\n\n    return reviews.length === 0 ? (\n        <h3>No Reviews</h3>\n    ) : (\n        <ReviewsList>\n            {reviews.map(({ id, author, content }) => (\n                <ReviewsItem key={id}>\n                    <ReviewsDescr>{author}</ReviewsDescr>\n                    <ReviewsDescr>{content}</ReviewsDescr>\n                </ReviewsItem>\n            ))}\n        </ReviewsList>\n    )\n\n};\nexport default Reviews;"],"names":["axios","API_KEY","fetchMovies","data","results","fetchMovieQuery","query","fetchMovieId","movieId","fetchMovieCast","cast","fetchMovieReviews","ReviewsList","styled","ReviewsItem","ReviewsDescr","useParams","useState","reviews","setReviews","useEffect","fetchReviews","console","log","length","map","id","author","content"],"sourceRoot":""}