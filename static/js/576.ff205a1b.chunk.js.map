{"version":3,"file":"static/js/576.ff205a1b.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,sCAAyCC,IADrC,uBAClBE,EADkB,EAClBA,KADkB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDK,EAAnD,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAc,mCAAG,WAAMD,GAAN,yFACLR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,EAAKO,MAFgB,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qD,0MCtBjBQ,EAAwBC,EAAAA,EAAAA,IAAH,4CAIrBC,GAASD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,2PAkBNG,EAAcH,EAAAA,EAAAA,IAAH,6GAOXI,EAAUJ,EAAAA,EAAAA,IAAH,qGAQPK,EAAaL,EAAAA,EAAAA,GAAH,oIAQVM,GAAaN,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,qL,SCmBvB,EA3DyB,WAAO,IAAD,MACnBL,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAA0Ba,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAczC,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,8GAESvB,EAAAA,EAAAA,IAAaC,GAFtB,OAETuB,EAFS,OAGfR,EAASQ,GAHM,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAQpBH,GACH,GAAE,CAACtB,KAGI,UAACI,EAAD,YACI,SAACE,EAAD,CAAQoB,GAAIR,EAAZ,SAAsB,aAEtB,UAACV,EAAD,YACA,SAACC,EAAD,CAASkB,IAAG,UAAKb,EAAMc,YAAN,yCAAsDd,EAAMc,aACvEC,GACEC,IAAI,kBAIZ,4BACI,wBAAKhB,EAAMiB,kBACX,yBAAG,eAAaC,KAAKC,MAA2B,GAArBnB,EAAMoB,cAAmB,QACpD,wBAAI,cACJ,uBAAIpB,EAAMqB,YACV,wBAAI,YACJ,iCAAIrB,EAAMsB,cAAV,aAAI,EAAcC,KAAI,SAAAC,GAAK,OACvB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADQ,aAK/B,4BACI,wBAAI,4BACJ,UAAC9B,EAAD,YACI,yBACI,SAACC,EAAD,CAAYe,GAAG,OAAOP,MAAOH,EAASG,MAAtC,SAA6C,YAEjD,yBACI,SAACR,EAAD,CAAYe,GAAG,UAAUP,MAAOH,EAASG,MAAzC,SAAgD,qBAIxD,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACI,SAAC,KAAD,QAIvB,C","sources":["api/Api.jsx","components/pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6c7bf07634a6f35c9bd58e8125654f91';\n\nexport const fetchMovies = async () => {\n  const {data} = await axios.get(`trending/movie/week?api_key=${API_KEY}`)\n  return data.results;\n}\n\nexport const fetchMovieQuery = async query => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n  return data.results;\n}\n\nexport const fetchMovieId = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n    \nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return data.cast;\n}\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.div`\n    padding: 30px;\n`;\n\nexport const Button = styled(Link)`\n    display: inline-block; \n    padding: 7px 10px;\n    font-weight: 600;\n    text-decoration:none;\n    \n\n::before{\n    content: '<<';\n    font-weight: 600;\n}\n\n    &:hover,\n    &:focus{\n        color: blue;\n    }\n`;\n\nexport const FilmWrapper = styled.div`\n    display: flex;\n    gap: 12px;\n    margin-top: 12px;\n    margin-bottom: 12px;\n`;\n\nexport const ImgFilm = styled.img`\n   max-width: 200px;\n  \n   object-fit: cover;\n  \n  border-radius: 15px;\n`;\n\nexport const InformList = styled.ul`\n    display: flex;\n    gap: 12px;\n    margin-bottom: 12px;\n    font-weight: 600;\n    list-style: none;\n`;\n\nexport const InformLink = styled(Link)`\n    color: #080808;\n    font-size:16px;\n    font-weight: 600;\n    text-decoration: auto;\n    \n    &:hover,\n    &:focus {\n        color: blue;\n    }\n`;\n\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieId } from 'api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport defaultImg  from 'img/defaultImg.jpg';\nimport { MovieDetailsContainer,Button,FilmWrapper,ImgFilm, InformList, InformLink } from 'components/pages/MovieDetailsPage/MovieDetailsPage.styled';\n\n\nconst MovieDetailsPage = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState('');\n    const location = useLocation();\n    \n    const backLink = location.state?.from ?? '/movies';\n\n    useEffect(() => {\n        const fetchMovieById = async () => {\n            try {\n                const movieById = await fetchMovieId(movieId);\n                setMovie(movieById);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchMovieById();\n    }, [movieId]);\n    \n    return (\n            <MovieDetailsContainer>\n                <Button to={backLink}>Go back</Button>\n\n                <FilmWrapper>\n                <ImgFilm src={`${movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                    : defaultImg}`}\n                        alt=\"movie poster\"\n                       \n                    />\n                \n                <div>\n                    <h1>{movie.original_title}</h1>\n                    <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                    <h2>Overview</h2>\n                    <p>{movie.overview}</p>\n                    <h2>Genres</h2>\n                    <p>{movie.genres?.map(genre => (\n                        <li key={genre.id}>{genre.name}</li>))}\n                        </p>\n                    </div>\n                </FilmWrapper>\n                <div>\n                    <h3>Additional information</h3>\n                    <InformList>\n                        <li>\n                            <InformLink to=\"cast\" state={location.state}>Cast</InformLink>\n                        </li>\n                        <li>\n                            <InformLink to=\"reviews\" state={location.state}>Reviews</InformLink>\n                        </li>\n                    </InformList>\n                    </div>\n                    <Suspense fallback={<Loader />}>\n                        <Outlet />\n                    </Suspense>\n            </MovieDetailsContainer>\n       ) \n};\n\nexport default MovieDetailsPage;"],"names":["axios","API_KEY","fetchMovies","data","results","fetchMovieQuery","query","fetchMovieId","movieId","fetchMovieCast","cast","fetchMovieReviews","MovieDetailsContainer","styled","Button","Link","FilmWrapper","ImgFilm","InformList","InformLink","useParams","useState","movie","setMovie","location","useLocation","backLink","state","from","useEffect","fetchMovieById","movieById","console","log","to","src","poster_path","defaultImg","alt","original_title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Loader"],"sourceRoot":""}