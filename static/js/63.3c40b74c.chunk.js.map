{"version":3,"file":"static/js/63.3c40b74c.chunk.js","mappings":"kTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGACJF,EAAAA,EAAAA,IAAA,sCAAyCC,IADrC,uBAClBE,EADkB,EAClBA,KADkB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAe,mCAAG,WAAMC,GAAN,yFACNN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,kBAAmDK,EAAnD,+CADM,uBACrBH,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMC,GAAN,yFACHR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAc,mCAAG,WAAMD,GAAN,yFACLR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAErBA,EAAKO,MAFgB,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qD,sGCvBjBQ,EAAWC,EAAAA,EAAAA,GAAH,uFAMRC,EAAWD,EAAAA,EAAAA,GAAH,0V,SCUrB,EAdiB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACVC,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAACL,EAAD,UACKG,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACR,SAACN,EAAD,WACI,SAAC,KAAD,CAAMO,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAhD,SACKC,KAFMD,EADP,KASvB,C,8KCdYK,EAAkBX,EAAAA,EAAAA,MAAH,mVAoBfY,EAAmBZ,EAAAA,EAAAA,OAAH,kV,SCa7B,EAjCmB,SAAC,GAAyB,IAAvBa,EAAsB,EAAtBA,gBAClB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOrB,EAAP,KAAcsB,EAAd,KAaA,OACI,kBAAMC,SAZW,SAAAC,GACjBA,EAAMC,iBAENL,EAAgB,CAAEpB,MAAAA,GAErB,EAOG,WACI,SAACkB,EAAD,CACIQ,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBACZC,MAAO9B,EACP+B,SAZe,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACpCR,EAASQ,EACZ,KAYO,SAACX,EAAD,CACIO,KAAK,SACLO,UAAWjC,EAFf,SAEsB,aAKjC,ECED,EA5BmB,WACf,OAA4BqB,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAeyB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBhB,EAArB,KAkBA,OAhBAiB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAeF,EAAaG,IAAI,SACtC,GAAKD,EAAL,CAEA,IAAME,EAAU,mCAAG,8GAEczC,EAAAA,EAAAA,IAAgBuC,GAF9B,OAELG,EAFK,OAGXP,EAAUO,GAHC,gDAKXC,QAAQC,IAAR,MALW,yDAAH,qDAQhBH,GAVyB,CAW5B,GAAE,CAACJ,KAIA,iCACI,SAAC,EAAD,CAAYhB,gBAAiBA,IAC5BX,EAAOmC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAUpC,OAAQA,MAGnD,C","sources":["api/Api.jsx","components/FilmList/FilmList.styled.jsx","components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6c7bf07634a6f35c9bd58e8125654f91';\n\nexport const fetchMovies = async () => {\n  const {data} = await axios.get(`trending/movie/week?api_key=${API_KEY}`)\n  return data.results;\n}\n\nexport const fetchMovieQuery = async query => {\n  const { data } = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n  return data.results;\n}\n\nexport const fetchMovieId = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  return data;\n}\n    \nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return data.cast;\n}\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return data.results;\n}\n","import styled from '@emotion/styled';\n\nexport const ListFilm = styled.ul`\n    margin-top: 20px;\n    list-style: none;\n    padding: 0;\n`;\n\nexport const ItemFilm = styled.li`\n    font-weight: 700;\n    font-size: 16px;\n\n    :hover,\n    :focus{\n        box-shadow: 8px 10px 5px 2px rgba(0, 0, 255, .2);\n    }\n    \na{\n    display: block;\n    padding: 10px 10px;\n    text-decoration: none;\n    color: #0e3131;\n\n    :hover,\n    :focus{\n        color:  rgb(144 59 213 / 54%);\n    }\n}\n`;","import { useLocation, Link } from 'react-router-dom';\nimport { ListFilm,ItemFilm, } from './FilmList.styled';\n\n\nconst FilmList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ListFilm>\n            {movies.map(({ id, original_title }) => (\n                <ItemFilm key={id}>\n                    <Link state={{ from: location }} to={`/movies/${id}`}>\n                        {original_title}\n                    </Link>\n                </ItemFilm>\n            ))}\n        </ListFilm>\n    )\n};\nexport default FilmList;","import styled from '@emotion/styled';\n\n\nexport const InputSearchForm = styled.input`\n  display: inline-block;\n  \n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  margin-right:10px;\n  padding: 4px 4px;\n \n  border-radius: 5px;\nbackground-color: #99d6e7;\nbox-shadow: 8px 10px 5px 2px rgba(0, 0, 255, .2);\n\n  &::placeholder{\n  font: inherit;\n  font-size: 18px;\n  }\n`;\n \nexport const ButtonSearchForm = styled.button`\n  display: inline-block;\n  font-size: 20px;\n  border: 0;\n  padding: 4px 4px;\n  opacity: 0.6;\n  \n  cursor: pointer;\n  outline: none;\n  color: black;\n  border-radius: 5px;\n  background-color: #21809b;\n  box-shadow: 8px 10px 5px 2px rgba(0, 0, 255, .2);\n \n&:hover{\n  color: aqua;\n    opacity: 1;\n  }\n`;","import { useState } from 'react';\nimport { InputSearchForm, ButtonSearchForm } from 'components/SearchForm/SearchForm.styled';\n\nconst SearchForm = ({ setSearchParams }) => {\n    const [query, setQuery] = useState('');\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        setSearchParams({ query });\n        \n    };\n\n    const handleSearchParams = ({ target: { value } }) => {\n        setQuery(value);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <InputSearchForm\n                type=\"text\"\n                autocomplete=\"off\"\n                autoFocus\n                placeholder=\"Search movies...\"\n                value={query}\n                onChange={handleSearchParams}\n            />\n            <ButtonSearchForm\n                type=\"submit\"\n                disabled={!query}>\n                Search\n            </ButtonSearchForm>\n        </form>\n    )\n};\n\nexport default SearchForm;","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieQuery } from 'api/Api';\n\nimport FilmList from 'components/FilmList/FilmList';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\n\nconst MoviesPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const currentQuery = searchParams.get('query');\n        if (!currentQuery) return;\n\n        const fetchQuery = async () => {\n            try {\n                const movieQuery = await fetchMovieQuery(currentQuery);\n                setMovies(movieQuery);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        fetchQuery();\n    }, [searchParams]);\n\n\n    return (\n        <>\n            <SearchForm setSearchParams={setSearchParams} />\n            {movies.length > 0 && <FilmList movies={movies} />}\n        </>\n    )\n};\n\nexport default MoviesPage;"],"names":["axios","API_KEY","fetchMovies","data","results","fetchMovieQuery","query","fetchMovieId","movieId","fetchMovieCast","cast","fetchMovieReviews","ListFilm","styled","ItemFilm","movies","location","useLocation","map","id","original_title","state","from","to","InputSearchForm","ButtonSearchForm","setSearchParams","useState","setQuery","onSubmit","event","preventDefault","type","autocomplete","autoFocus","placeholder","value","onChange","target","disabled","setMovies","useSearchParams","searchParams","useEffect","currentQuery","get","fetchQuery","movieQuery","console","log","length","FilmList"],"sourceRoot":""}